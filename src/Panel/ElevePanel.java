/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import bean.Eleve;
import controller.AnneeScolaireController;
import controller.ClasseController;
import controller.CycleController;
import controller.EleveController;
import controller.NationaliteController;
import dialog.DetailDialog;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;

/**
 *
 * @author ATH
 */
public class ElevePanel extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public ElevePanel() {
        anneeScolaireController = new AnneeScolaireController();
        eleveController = new EleveController();
        nationaliteController = new NationaliteController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        initComponents();
        initCbAnnee();
        initCbCycle();
        initCbClasse();
        initCbNationalite();
        initTable();
        initNew();
        try {
            rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours().getAnnee());
        } catch (Exception e) {
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup_table = new javax.swing.JPopupMenu();
        menu_item_detail = new javax.swing.JMenuItem();
        menu_item_sms = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menu_item_add_eleve = new javax.swing.JMenuItem();
        menu_item_update_eleve = new javax.swing.JMenuItem();
        menu_item_remove_eleve = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_eleve = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        rSMTextFull_recherche = new rojeru_san.RSMTextFull();
        rSComboMetro_nationalite = new rojerusan.RSComboMetro();
        rSComboMetro_sexe = new rojerusan.RSComboMetro();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        rSComboMetro_cycle = new rojerusan.RSComboMetro();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rSComboMetro_classe = new rojerusan.RSComboMetro();
        jPanel1 = new javax.swing.JPanel();
        rSButtonRiple_nouveau = new rojeru_san.RSButtonRiple();
        rSButtonRiple_modifier = new rojeru_san.RSButtonRiple();

        menu_item_detail.setText("Voir détail");
        menu_item_detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_detailActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_detail);

        menu_item_sms.setText("Contacter");
        menu_item_sms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_smsActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_sms);
        popup_table.add(jSeparator1);

        menu_item_add_eleve.setText("Inscription");
        menu_item_add_eleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_add_eleveActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_add_eleve);

        menu_item_update_eleve.setText("Modifier l'élève");
        menu_item_update_eleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_update_eleveActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_update_eleve);

        menu_item_remove_eleve.setText("Retirer l'étudiant");
        menu_item_remove_eleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_remove_eleveActionPerformed(evt);
            }
        });
        popup_table.add(menu_item_remove_eleve);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 579));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(51, 102, 255)), "Liste des étudiants", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_eleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "CLASSE", "MATRICULE", "NOM ET PRENOM", "SEXE", "DATE DE NAISSANCE", "LIEU DE NAISSANCE", "NATIONALITE", "NUM. PARENT/TUTEUR", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_eleve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_eleveMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_eleve);
        if (jTable_eleve.getColumnModel().getColumnCount() > 0) {
            jTable_eleve.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_eleve.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_eleve.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_eleve.getColumnModel().getColumn(1).setMinWidth(105);
            jTable_eleve.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable_eleve.getColumnModel().getColumn(1).setMaxWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setMinWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setPreferredWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setMaxWidth(105);
            jTable_eleve.getColumnModel().getColumn(4).setMinWidth(65);
            jTable_eleve.getColumnModel().getColumn(4).setPreferredWidth(65);
            jTable_eleve.getColumnModel().getColumn(4).setMaxWidth(65);
            jTable_eleve.getColumnModel().getColumn(5).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(5).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(5).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(6).setMinWidth(150);
            jTable_eleve.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable_eleve.getColumnModel().getColumn(6).setMaxWidth(150);
            jTable_eleve.getColumnModel().getColumn(7).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(7).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(7).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(9).setMinWidth(10);
            jTable_eleve.getColumnModel().getColumn(9).setPreferredWidth(10);
            jTable_eleve.getColumnModel().getColumn(9).setMaxWidth(10);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Filtrage liste élèves", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        rSMTextFull_recherche.setPlaceholder("Rechercher");
        rSMTextFull_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rSMTextFull_rechercheKeyReleased(evt);
            }
        });

        rSComboMetro_nationalite.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSComboMetro_nationalite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_nationaliteActionPerformed(evt);
            }
        });

        rSComboMetro_sexe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tous", "M", "F" }));
        rSComboMetro_sexe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rSComboMetro_sexe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_sexeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Sexe");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nationalité");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rSComboMetro_nationalite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rSComboMetro_sexe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(rSComboMetro_nationalite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rSComboMetro_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Année");

        rSComboMetro_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_anneeActionPerformed(evt);
            }
        });

        rSComboMetro_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_cycleActionPerformed(evt);
            }
        });

        jLabel6.setText("Cycle");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Classe");

        rSComboMetro_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_classeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        rSButtonRiple_nouveau.setText("Nouveau");
        rSButtonRiple_nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple_nouveauActionPerformed(evt);
            }
        });

        rSButtonRiple_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple_modifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rSButtonRiple_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rSButtonRiple_nouveau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(rSButtonRiple_nouveau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rSButtonRiple_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_detailActionPerformed
        // TODO add your handling code here:
        int row = jTable_eleve.getSelectedRow();
        if(row < 0){
            return;
        }
        String matricule = jTable_eleve.getValueAt(row, 9).toString();
        DetailDialog detail = new DetailDialog(null, true,eleveController.getEleve(matricule));
        detail.setVisible(true);
    }//GEN-LAST:event_menu_item_detailActionPerformed

    private void menu_item_smsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_smsActionPerformed
        int row = jTable_eleve.getSelectedRow();
        if(row < 0){
            dialog.ContacterDialog contacter = new dialog.ContacterDialog(null, true);
            contacter.setVisible(true);
        }else{
            String matricule = jTable_eleve.getValueAt(row, 9).toString();
            dialog.ContacterDialog contacter = new dialog.ContacterDialog(null, true,eleveController.getEleve(matricule));
            contacter.setVisible(true);
        }
    }//GEN-LAST:event_menu_item_smsActionPerformed

    private void menu_item_add_eleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_add_eleveActionPerformed
        addEleve();
    }//GEN-LAST:event_menu_item_add_eleveActionPerformed

    private void menu_item_update_eleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_update_eleveActionPerformed
        updateEleve();
    }//GEN-LAST:event_menu_item_update_eleveActionPerformed

    private void menu_item_remove_eleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_remove_eleveActionPerformed
        removeEleve();
    }//GEN-LAST:event_menu_item_remove_eleveActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        int r = jTable_eleve.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_eleve.getRowCount()){
            jTable_eleve.setRowSelectionInterval(r, r);

        }else{
            jTable_eleve.clearSelection();
        }
        int index = jTable_eleve.getSelectedRow();
        if(index < 0){
            //menu_item_sms.setEnabled(false);
            menu_item_detail.setEnabled(false);
            menu_item_remove_eleve.setEnabled(false);
            menu_item_update_eleve.setEnabled(false);
            initNew();
        }else{
            //menu_item_sms.setEnabled(true);
            menu_item_detail.setEnabled(true);
            menu_item_add_eleve.setEnabled(true);
            menu_item_remove_eleve.setEnabled(true);
            menu_item_update_eleve.setEnabled(true);
            initUpdate();
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup_table.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_eleveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_eleveMouseReleased
        int r = jTable_eleve.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_eleve.getRowCount()){
            jTable_eleve.setRowSelectionInterval(r, r);

        }else{
            jTable_eleve.clearSelection();
        }
        int index = jTable_eleve.getSelectedRow();
        if(index < 0){
            //menu_item_sms.setEnabled(false);
            menu_item_detail.setEnabled(false);
            menu_item_remove_eleve.setEnabled(false);
            menu_item_update_eleve.setEnabled(false);
            initNew();
        }else{
            //menu_item_sms.setEnabled(true);
            menu_item_detail.setEnabled(true);
            menu_item_add_eleve.setEnabled(true);
            menu_item_remove_eleve.setEnabled(true);
            menu_item_update_eleve.setEnabled(true);
            initUpdate();
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup_table.show(evt.getComponent(), evt.getX(), evt.getY());
            popup_table.setVisible(true);
        }
    }//GEN-LAST:event_jTable_eleveMouseReleased

    private void rSComboMetro_nationaliteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_nationaliteActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_nationaliteActionPerformed

    private void rSComboMetro_sexeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_sexeActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_sexeActionPerformed

    private void rSMTextFull_rechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rSMTextFull_rechercheKeyReleased
        initTable();
    }//GEN-LAST:event_rSMTextFull_rechercheKeyReleased

    private void rSComboMetro_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_cycleActionPerformed
        initCbClasse();
        initTable();
    }//GEN-LAST:event_rSComboMetro_cycleActionPerformed

    private void rSComboMetro_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_classeActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_classeActionPerformed

    private void rSComboMetro_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_anneeActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_anneeActionPerformed

    private void rSButtonRiple_nouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple_nouveauActionPerformed
        if(rSButtonRiple_nouveau.getText().equals("Nouveau")){
            addEleve();
        }else{
            updateEleve();
        }
    }//GEN-LAST:event_rSButtonRiple_nouveauActionPerformed

    private void rSButtonRiple_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple_modifierActionPerformed
        removeEleve();
    }//GEN-LAST:event_rSButtonRiple_modifierActionPerformed

    private final EleveController eleveController;
    private final NationaliteController nationaliteController;
    private final CycleController cycleController;
    private final ClasseController classeController;
    private final AnneeScolaireController anneeScolaireController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable_eleve;
    private javax.swing.JMenuItem menu_item_add_eleve;
    private javax.swing.JMenuItem menu_item_detail;
    private javax.swing.JMenuItem menu_item_remove_eleve;
    private javax.swing.JMenuItem menu_item_sms;
    private javax.swing.JMenuItem menu_item_update_eleve;
    private javax.swing.JPopupMenu popup_table;
    private rojeru_san.RSButtonRiple rSButtonRiple_modifier;
    private rojeru_san.RSButtonRiple rSButtonRiple_nouveau;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    private rojerusan.RSComboMetro rSComboMetro_classe;
    private rojerusan.RSComboMetro rSComboMetro_cycle;
    private rojerusan.RSComboMetro rSComboMetro_nationalite;
    private rojerusan.RSComboMetro rSComboMetro_sexe;
    private rojeru_san.RSMTextFull rSMTextFull_recherche;
    // End of variables declaration//GEN-END:variables

    private void initCbNationalite() {
        rSComboMetro_nationalite.removeAllItems();
        nationaliteController.getListNationalite().forEach((n) -> {
            rSComboMetro_nationalite.addItem(n.getNationalite());
        });
        if(rSComboMetro_nationalite.getItemCount() > 1){
            rSComboMetro_nationalite.addItem("Toutes");
        }
    }

    private void initCbCycle(){
        rSComboMetro_cycle.removeAllItems();
        cycleController.getListCycle().forEach((c) -> {
            rSComboMetro_cycle.addItem(c);
        });
        if(rSComboMetro_cycle.getItemCount() > 1){
            rSComboMetro_cycle.addItem("Tous");
        }
    }
    private void success_information() {
        JOptionPane.showMessageDialog(this, "Opération effectuée avec succes ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void initTable(){
        initNew();
        String entete[] = {"N°", "CLASSE", "MATRICULE", "NOM ET PRENOM", "SEXE", "DATE DE NAISSANCE", "LIEU DE NAISSANCE", "NATIONALITE", "NUM. PARENT/TUTEUR", "ID"};
        DefaultTableModel dt=new DefaultTableModel(null,entete);
        dt.setRowCount(0);
        
        String annee = null, cycle = null, classe = null, rechercher = null, nationalite = null, sexe = null;
        if(rSComboMetro_annee.getSelectedIndex() > -1){
            annee = rSComboMetro_annee.getSelectedItem().toString();
        }
        if(rSComboMetro_cycle.getSelectedIndex() > -1){
            cycle = rSComboMetro_cycle.getSelectedItem().toString();
        }
        if(rSComboMetro_classe.getSelectedIndex() > -1){
            classe = rSComboMetro_classe.getSelectedItem().toString();
        }
        if(rSMTextFull_recherche.getText().length() > 0){
            rechercher = rSMTextFull_recherche.getText();
        }
        if(rSComboMetro_nationalite.getSelectedIndex() > -1){
            nationalite = rSComboMetro_nationalite.getSelectedItem().toString();
        }
        if(rSComboMetro_sexe.getSelectedIndex() > -1){
            sexe = rSComboMetro_sexe.getSelectedItem().toString();
        }
        ArrayList<Eleve> list_eleve = eleveController.getListEleve(annee, cycle, classe, rechercher, nationalite, sexe);
        
        for(int i = 0; i< list_eleve.size(); i++){
            Object colonne[]=new Object[10];
            colonne[0] = i + 1;
            colonne[1] = list_eleve.get(i).getClasse().getClasse();
            colonne[2] = list_eleve.get(i).getMatricule();
            colonne[3] = list_eleve.get(i).getNom_prenom();
            colonne[4] = list_eleve.get(i).getSexe();
            colonne[5] = list_eleve.get(i).getDate_de_naissance();
            colonne[6] = list_eleve.get(i).getLieu_de_naissance();
            colonne[7] = list_eleve.get(i).getNationalite();
            colonne[8] = list_eleve.get(i).getContact();
            colonne[9] = list_eleve.get(i).getMatricule();
            dt.addRow(colonne);
        }
        
        this.jTable_eleve.setModel(dt);
        if (jTable_eleve.getColumnModel().getColumnCount() > 0) {
            jTable_eleve.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_eleve.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_eleve.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_eleve.getColumnModel().getColumn(1).setMinWidth(105);
            jTable_eleve.getColumnModel().getColumn(1).setPreferredWidth(105);
            jTable_eleve.getColumnModel().getColumn(1).setMaxWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setMinWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setPreferredWidth(105);
            jTable_eleve.getColumnModel().getColumn(2).setMaxWidth(105);
            jTable_eleve.getColumnModel().getColumn(4).setMinWidth(65);
            jTable_eleve.getColumnModel().getColumn(4).setPreferredWidth(65);
            jTable_eleve.getColumnModel().getColumn(4).setMaxWidth(65);
            jTable_eleve.getColumnModel().getColumn(5).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(5).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(5).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(6).setMinWidth(150);
            jTable_eleve.getColumnModel().getColumn(6).setPreferredWidth(150);
            jTable_eleve.getColumnModel().getColumn(6).setMaxWidth(150);
            jTable_eleve.getColumnModel().getColumn(7).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(7).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(7).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setMinWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setPreferredWidth(140);
            jTable_eleve.getColumnModel().getColumn(8).setMaxWidth(140);
            jTable_eleve.getColumnModel().getColumn(9).setMinWidth(10);
            jTable_eleve.getColumnModel().getColumn(9).setPreferredWidth(10);
            jTable_eleve.getColumnModel().getColumn(9).setMaxWidth(10);
            jTable_eleve.setRowHeight(30);
        }
    }

    private void initCbClasse() {
        rSComboMetro_classe.removeAllItems();
        String cycle = null;
        if(rSComboMetro_annee.getSelectedIndex() < 0){
            return;
        }
        if(rSComboMetro_cycle.getSelectedIndex() > -1){
            cycle = rSComboMetro_cycle.getSelectedItem().toString();
        }
        classeController.getListClasse(rSComboMetro_annee.getSelectedItem().toString(), cycle).forEach((c) -> {
            rSComboMetro_classe.addItem(c.getClasse());
        });
        if(rSComboMetro_classe.getItemCount() > 1){
            rSComboMetro_classe.addItem("Toutes");
        }
    }
    
    private void initCbAnnee(){
        rSComboMetro_annee.removeAllItems();
        anneeScolaireController.getListAnneeScolaire().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
    }

    private void initNew() {
        rSButtonRiple_nouveau.setText("Nouveau");
        rSButtonRiple_nouveau.setBackground(Color.green);
        rSButtonRiple_nouveau.setColorHover(new Color(0,200,0));
        
        rSButtonRiple_modifier.setText("");
        rSButtonRiple_modifier.setBackground(new Color(0,112,192));
        rSButtonRiple_modifier.setVisible(false);
    }
    
    private void initUpdate() {
        rSButtonRiple_nouveau.setText("Modifier");
        rSButtonRiple_nouveau.setBackground(Color.orange);
        rSButtonRiple_nouveau.setColorHover(new Color(200,200,0));
        
        rSButtonRiple_modifier.setText("Suprimer");
        rSButtonRiple_modifier.setBackground(Color.red);
        rSButtonRiple_modifier.setColorHover(new Color(153,102,0));
        rSButtonRiple_modifier.setVisible(true);
    }

    private void addEleve() {
        dialog.EleveDialog etudiant = new dialog.EleveDialog(null, true);
        etudiant.setVisible(true);
        initTable();
    }

    private void updateEleve() {
        int row = jTable_eleve.getSelectedRow();
        if(row < 0){
            return;
        }
        String matricule = jTable_eleve.getValueAt(row, 9).toString();
        dialog.EleveDialog eleveDialog = new dialog.EleveDialog(null, true,matricule);
        eleveDialog.setVisible(true);
        initTable();
    }

    private void removeEleve() {
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'élève " + jTable_eleve.getValueAt(jTable_eleve.getSelectedRow(), 3) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if(choice == 0){
            eleveController.removeEleve(jTable_eleve.getValueAt(jTable_eleve.getSelectedRow(), 9).toString());
        }
        initTable();
    }
}
