/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import bean.Classe;
import bean.ProfesseurMatiereClasse;
import controller.AnneeScolaireController;
import controller.ClasseController;
import controller.CycleController;
import controller.MatiereClasseController;
import controller.ProfesseurController;
import controller.ProfesseurMatiereClasseController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;

/**
 *
 * @author ATH
 */
public class PMCPanel extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public PMCPanel() {
        cycleController = new CycleController();
        classeController = new ClasseController();
        anneeScolaireController = new AnneeScolaireController();
        professeurMatiereClasseController = new ProfesseurMatiereClasseController();
        professeurController = new ProfesseurController();
        matiereClasseController = new MatiereClasseController();
        initComponents();
        initCbAnnee();
        initCbCycle();
        initCbClasse();
        initTable();
        try {
            rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours().getAnnee());
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        menu_item_add = new javax.swing.JMenuItem();
        menu_item_update = new javax.swing.JMenuItem();
        menu_item_remove = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_matiere_professeur = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        rSComboMetro_cycle = new rojerusan.RSComboMetro();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rSComboMetro_classe = new rojerusan.RSComboMetro();
        jSeparator2 = new javax.swing.JSeparator();
        rSMTextFull_recherche = new rojeru_san.RSMTextFull();

        menu_item_add.setText("Ajouter");
        menu_item_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_addActionPerformed(evt);
            }
        });
        popup.add(menu_item_add);

        menu_item_update.setText("Modifier");
        menu_item_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_updateActionPerformed(evt);
            }
        });
        popup.add(menu_item_update);

        menu_item_remove.setText("Retirer");
        menu_item_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_removeActionPerformed(evt);
            }
        });
        popup.add(menu_item_remove);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 579));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "Liste des attributions des matières", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_matiere_professeur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "ANNEE", "CLASSE", "MATRICULE", "ENSEIGNANT", "MATIERE", "COEFFICIENT", "VOL. HORAIRE", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_matiere_professeur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_matiere_professeurMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_matiere_professeur);
        if (jTable_matiere_professeur.getColumnModel().getColumnCount() > 0) {
            jTable_matiere_professeur.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setMinWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setPreferredWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setMaxWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setMinWidth(10);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setPreferredWidth(10);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setMaxWidth(10);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Année");

        rSComboMetro_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_anneeActionPerformed(evt);
            }
        });

        rSComboMetro_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_cycleActionPerformed(evt);
            }
        });

        jLabel6.setText("Cycle");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Classe");

        rSComboMetro_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_classeActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        rSMTextFull_recherche.setPlaceholder("Rechercher");
        rSMTextFull_recherche.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rSMTextFull_rechercheKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMTextFull_recherche, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_addActionPerformed
        dialog.ProfesseurMatiereClasseDialog professeurMatiereClasseDialog = new dialog.ProfesseurMatiereClasseDialog(null, true);
        professeurMatiereClasseDialog.setVisible(true);
        initTable();
    }//GEN-LAST:event_menu_item_addActionPerformed

    private void menu_item_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_updateActionPerformed
        int row = jTable_matiere_professeur.getSelectedRow();
        dialog.ProfesseurMatiereClasseDialog professeurMatiereClasseDialog = new dialog.ProfesseurMatiereClasseDialog(null, true, new ProfesseurMatiereClasse(professeurController.getProfesseur((String)jTable_matiere_professeur.getValueAt(row, 3)), matiereClasseController.getMatiereClasse((String)jTable_matiere_professeur.getValueAt(row, 2), (String)jTable_matiere_professeur.getValueAt(row, 1), (String)jTable_matiere_professeur.getValueAt(row, 5))));
        professeurMatiereClasseDialog.setVisible(true);
        initTable();
    }//GEN-LAST:event_menu_item_updateActionPerformed

    private void menu_item_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_removeActionPerformed
        int row = jTable_matiere_professeur.getSelectedRow();
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'atribution selectionnée de " + jTable_matiere_professeur.getValueAt(jTable_matiere_professeur.getSelectedRow(), 4) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if(choice == 0){
            professeurMatiereClasseController.removeProfesseurMatiereClasse(professeurController.getProfesseur((String)jTable_matiere_professeur.getValueAt(row, 3)), matiereClasseController.getMatiereClasse((String)jTable_matiere_professeur.getValueAt(row, 2), (String)jTable_matiere_professeur.getValueAt(row, 1), (String)jTable_matiere_professeur.getValueAt(row, 5)));
        }
        initTable();
    }//GEN-LAST:event_menu_item_removeActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        int r = jTable_matiere_professeur.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_matiere_professeur.getRowCount()){
            jTable_matiere_professeur.setRowSelectionInterval(r, r);

        }else{
            jTable_matiere_professeur.clearSelection();
        }
        int index = jTable_matiere_professeur.getSelectedRow();
        if(index < 0){
            menu_item_remove.setEnabled(false);
            menu_item_update.setEnabled(false);
        }else{
            menu_item_add.setEnabled(true);
            menu_item_remove.setEnabled(true);
            menu_item_update.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane){
            popup.show(evt.getComponent(), evt.getX(), evt.getY());
            popup.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_matiere_professeurMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_matiere_professeurMouseReleased
        int r = jTable_matiere_professeur.rowAtPoint(evt.getPoint());
        if(r >=0 && r < jTable_matiere_professeur.getRowCount()){
            jTable_matiere_professeur.setRowSelectionInterval(r, r);

        }else{
            jTable_matiere_professeur.clearSelection();
        }
        int index = jTable_matiere_professeur.getSelectedRow();
        if(index < 0){
            menu_item_remove.setEnabled(false);
            menu_item_update.setEnabled(false);
        }else{
            menu_item_add.setEnabled(true);
            menu_item_remove.setEnabled(true);
            menu_item_update.setEnabled(true);
        }
        if(evt.isPopupTrigger() && evt.getComponent() instanceof JTable){
            popup.show(evt.getComponent(), evt.getX(), evt.getY());
            popup.setVisible(true);
        }
    }//GEN-LAST:event_jTable_matiere_professeurMouseReleased

    private void rSComboMetro_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_anneeActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_anneeActionPerformed

    private void rSComboMetro_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_cycleActionPerformed
        initCbClasse();
        initTable();
    }//GEN-LAST:event_rSComboMetro_cycleActionPerformed

    private void rSComboMetro_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_classeActionPerformed
        initTable();
    }//GEN-LAST:event_rSComboMetro_classeActionPerformed

    private void rSMTextFull_rechercheKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rSMTextFull_rechercheKeyReleased
        initTable();
    }//GEN-LAST:event_rSMTextFull_rechercheKeyReleased

    private final CycleController cycleController;
    private final ClasseController classeController;
    private final AnneeScolaireController anneeScolaireController;
    private final ProfesseurMatiereClasseController professeurMatiereClasseController;
    private final ProfesseurController professeurController;
    private final MatiereClasseController matiereClasseController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable_matiere_professeur;
    private javax.swing.JMenuItem menu_item_add;
    private javax.swing.JMenuItem menu_item_remove;
    private javax.swing.JMenuItem menu_item_update;
    private javax.swing.JPopupMenu popup;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    private rojerusan.RSComboMetro rSComboMetro_classe;
    private rojerusan.RSComboMetro rSComboMetro_cycle;
    private rojeru_san.RSMTextFull rSMTextFull_recherche;
    // End of variables declaration//GEN-END:variables

    private void success_information() {
        JOptionPane.showMessageDialog(this, "Opération effectuée avec succes ", "Réussie !", JOptionPane.INFORMATION_MESSAGE);
    }
        
    private void initTable(){
        String entete[] = {"N°", "ANNEE", "CLASSE", "MATRICULE", "ENSEIGNANT", "MATIERE", "COEFFICIENT", "VOL. HORAIRE", "ID"};
        DefaultTableModel dt=new DefaultTableModel(null,entete);
        dt.setRowCount(0);
        if(rSComboMetro_annee.getSelectedIndex() < 0 || rSComboMetro_cycle.getSelectedIndex() < 0 || rSComboMetro_classe.getSelectedIndex() < 0){
            return;
        }
        ArrayList<ProfesseurMatiereClasse> listPMC = professeurMatiereClasseController.getListProfesseurMatiereClasse();

        if(!"Toutes".equals(rSComboMetro_annee.getSelectedItem().toString())){
            ArrayList<ProfesseurMatiereClasse> list = new ArrayList<>();
            for(ProfesseurMatiereClasse p : listPMC){
                if(p.getMatiereClasse().getClasse().getAnnee().equals(rSComboMetro_annee.getSelectedItem().toString())){
                    list.add(p);
                }
            }
            listPMC = list;
        }
        if(!"Tous".equals(rSComboMetro_cycle.getSelectedItem().toString())){
            ArrayList<ProfesseurMatiereClasse> list = new ArrayList<>();
            for(ProfesseurMatiereClasse p : listPMC){
                if(p.getMatiereClasse().getClasse().getCycle().equals(rSComboMetro_cycle.getSelectedItem().toString())){
                    list.add(p);
                }
            }
            listPMC = list;
        }
        if(!"Toutes".equals(rSComboMetro_classe.getSelectedItem().toString())){
            ArrayList<ProfesseurMatiereClasse> list = new ArrayList<>();
            for(ProfesseurMatiereClasse p : listPMC){
                if(p.getMatiereClasse().getClasse().getClasse().equals(rSComboMetro_classe.getSelectedItem().toString())){
                    list.add(p);
                }
            }
            listPMC = list;
        }
        if(rSMTextFull_recherche.getText().length() > 0){
            ArrayList<ProfesseurMatiereClasse> list = new ArrayList<>();
            for(ProfesseurMatiereClasse p : listPMC){
                if(p.getProfesseur().getNom_prenom().contains(rSMTextFull_recherche.getText()) || p.getMatiereClasse().getMatiere().getMatiere().contains(rSMTextFull_recherche.getText())){
                    list.add(p);
                }
            }
            listPMC = list;
        }
        for(int i = 0; i< listPMC.size(); i++){
            Object colonne[]=new Object[9];
            colonne[0] = i + 1;
            colonne[1] = listPMC.get(i).getMatiereClasse().getClasse().getAnnee();
            colonne[2] = listPMC.get(i).getMatiereClasse().getClasse().getClasse();
            colonne[3] = listPMC.get(i).getProfesseur().getMatricule();
            colonne[4] = listPMC.get(i).getProfesseur().getNom_prenom();
            colonne[5] = listPMC.get(i).getMatiereClasse().getMatiere().getMatiere();
            colonne[6] = listPMC.get(i).getMatiereClasse().getCoefficient();
            colonne[7] = listPMC.get(i).getMatiereClasse().getVolume_horaire();
            colonne[8] = "###";
            dt.addRow(colonne);
        }
        this.jTable_matiere_professeur.setModel(dt);
        if (jTable_matiere_professeur.getColumnModel().getColumnCount() > 0) {
            jTable_matiere_professeur.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(2).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(3).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setMinWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setPreferredWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(5).setMaxWidth(200);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(6).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setMinWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setPreferredWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(7).setMaxWidth(100);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setMinWidth(10);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setPreferredWidth(10);
            jTable_matiere_professeur.getColumnModel().getColumn(8).setMaxWidth(10);
            jTable_matiere_professeur.setRowHeight(30);
        }
    }
    private void initCbCycle(){
        rSComboMetro_cycle.removeAllItems();
        cycleController.getListCycle().forEach((c) -> {
            rSComboMetro_cycle.addItem(c);
        });
        if(rSComboMetro_cycle.getItemCount() > 1){
            rSComboMetro_cycle.addItem("Tous");
        }
        
    }
    private void initCbClasse() {
        rSComboMetro_classe.removeAllItems();
        String cycle = null;
        if(rSComboMetro_annee.getSelectedIndex() < 0){
            return;
        }
        if(rSComboMetro_cycle.getSelectedIndex() > -1){
            cycle = rSComboMetro_cycle.getSelectedItem().toString();
        }
        ArrayList<Classe> listClasse = classeController.getListClasse(rSComboMetro_annee.getSelectedItem().toString(), cycle);
        
        int size = listClasse.size();
        if(size > 1){
            listClasse.forEach((c) -> {
                rSComboMetro_classe.addItem(c.getClasse());
            });
            rSComboMetro_classe.addItem("Toutes");
        }else if(size > 0){
            listClasse.forEach((c) -> {
                rSComboMetro_classe.addItem(c.getClasse());
                
            });
        }
    }
    
    private void initCbAnnee(){
        rSComboMetro_annee.removeAllItems();
        anneeScolaireController.getListAnneeScolaire().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
    }
}
