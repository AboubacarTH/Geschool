/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import controller.MatiereController;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import rojerusan.RSPanelImage;

/**
 *
 * @author ATH
 */
public class MatierePanel extends RSPanelImage {

    /**
     * Creates new form ElevePan
     */
    public MatierePanel() {
        matiereController = new MatiereController();
        initComponents();
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        menu_item_add = new javax.swing.JMenuItem();
        menu_item_update = new javax.swing.JMenuItem();
        menu_item_remove = new javax.swing.JMenuItem();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_matiere = new javax.swing.JTable();

        menu_item_add.setText("Ajouter");
        menu_item_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_addActionPerformed(evt);
            }
        });
        popup.add(menu_item_add);

        menu_item_update.setText("Modifier");
        menu_item_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_updateActionPerformed(evt);
            }
        });
        popup.add(menu_item_update);

        menu_item_remove.setText("Retirer");
        menu_item_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_removeActionPerformed(evt);
            }
        });
        popup.add(menu_item_remove);

        setImagen(new javax.swing.ImageIcon(getClass().getResource("/icon/getty_655998316_2000149920009280219_363765.jpg"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(1100, 579));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(0, 51, 102), new java.awt.Color(0, 102, 102)), "Liste des matières", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jScrollPane3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane3MouseReleased(evt);
            }
        });

        jTable_matiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N°", "MATIERE", "TYPE", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_matiere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable_matiereMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_matiere);
        if (jTable_matiere.getColumnModel().getColumnCount() > 0) {
            jTable_matiere.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_matiere.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_matiere.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_matiere.getColumnModel().getColumn(2).setMinWidth(200);
            jTable_matiere.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable_matiere.getColumnModel().getColumn(2).setMaxWidth(200);
            jTable_matiere.getColumnModel().getColumn(3).setMinWidth(10);
            jTable_matiere.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable_matiere.getColumnModel().getColumn(3).setMaxWidth(10);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void menu_item_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_addActionPerformed
        dialog.MatiereDialog matiereDialog = new dialog.MatiereDialog(null, true);
        matiereDialog.setVisible(true);
        initTable();
    }//GEN-LAST:event_menu_item_addActionPerformed

    private void menu_item_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_updateActionPerformed
        int row = jTable_matiere.getSelectedRow();
        String matiere = jTable_matiere.getValueAt(row, 1).toString();
        dialog.MatiereDialog matiereDialog = new dialog.MatiereDialog(null, true, matiereController.getMatiere(matiere));
        matiereDialog.setVisible(true);
        initTable();
    }//GEN-LAST:event_menu_item_updateActionPerformed

    private void menu_item_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_removeActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Etes vous sure de vouloir suprimer l'unité d'enseignemant " + jTable_matiere.getValueAt(jTable_matiere.getSelectedRow(), 4) + " ?", "Action irréversible", JOptionPane.YES_NO_OPTION);
        if (choice == 0) {
            matiereController.removeMatiere((String) jTable_matiere.getValueAt(jTable_matiere.getSelectedRow(), 1));
        }
        initTable();
    }//GEN-LAST:event_menu_item_removeActionPerformed

    private void jScrollPane3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane3MouseReleased
        int r = jTable_matiere.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < jTable_matiere.getRowCount()) {
            jTable_matiere.setRowSelectionInterval(r, r);

        } else {
            jTable_matiere.clearSelection();
        }
        int index = jTable_matiere.getSelectedRow();
        if (index < 0) {
            menu_item_remove.setEnabled(false);
            menu_item_update.setEnabled(false);
        } else {
            menu_item_add.setEnabled(true);
            menu_item_remove.setEnabled(true);
            menu_item_update.setEnabled(true);
        }
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JScrollPane) {
            popup.show(evt.getComponent(), evt.getX(), evt.getY());
            popup.setVisible(true);
        }
    }//GEN-LAST:event_jScrollPane3MouseReleased

    private void jTable_matiereMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_matiereMouseReleased
        int r = jTable_matiere.rowAtPoint(evt.getPoint());
        if (r >= 0 && r < jTable_matiere.getRowCount()) {
            jTable_matiere.setRowSelectionInterval(r, r);

        } else {
            jTable_matiere.clearSelection();
        }
        int index = jTable_matiere.getSelectedRow();
        if (index < 0) {
            menu_item_remove.setEnabled(false);
            menu_item_update.setEnabled(false);
        } else {
            menu_item_add.setEnabled(true);
            menu_item_remove.setEnabled(true);
            menu_item_update.setEnabled(true);
        }
        if (evt.isPopupTrigger() && evt.getComponent() instanceof JTable) {
            popup.show(evt.getComponent(), evt.getX(), evt.getY());
            popup.setVisible(true);
        }
    }//GEN-LAST:event_jTable_matiereMouseReleased

    private final MatiereController matiereController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_matiere;
    private javax.swing.JMenuItem menu_item_add;
    private javax.swing.JMenuItem menu_item_remove;
    private javax.swing.JMenuItem menu_item_update;
    private javax.swing.JPopupMenu popup;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        String entete[] = {"N°", "MATIERE", "TYPE", "ID"};
        DefaultTableModel dt = new DefaultTableModel(null, entete);
        dt.setRowCount(0);
        
        ArrayList<bean.Matiere> listM = matiereController.getListMatiere();
        
        for (int i = 0; i < listM.size(); i++) {
            Object colonne[] = new Object[4];
            colonne[0] = i + 1;
            colonne[1] = listM.get(i).getMatiere();
            colonne[2] = listM.get(i).getType();
            colonne[3] = "###";
            dt.addRow(colonne);
        }
        this.jTable_matiere.setModel(dt);
        if (jTable_matiere.getColumnModel().getColumnCount() > 0) {
            jTable_matiere.getColumnModel().getColumn(0).setMinWidth(50);
            jTable_matiere.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable_matiere.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable_matiere.getColumnModel().getColumn(2).setMinWidth(200);
            jTable_matiere.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable_matiere.getColumnModel().getColumn(2).setMaxWidth(200);
            jTable_matiere.getColumnModel().getColumn(3).setMinWidth(10);
            jTable_matiere.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable_matiere.getColumnModel().getColumn(3).setMaxWidth(10);
            jTable_matiere.setRowHeight(30);
        }
    }
}
