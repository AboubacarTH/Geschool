/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dialog;

import bean.ProfesseurMatiereClasse;
import controller.AnneeScolaireController;
import controller.ClasseController;
import controller.CycleController;
import controller.MatiereController;
import controller.ProfesseurController;
import controller.ProfesseurMatiereClasseController;
import javax.swing.JOptionPane;

/**
 *
 * @author ATH
 */
public class ProfesseurMatiereClasseDialog extends javax.swing.JDialog {

    /**
     * Creates new form ProfesseurMatiereClasseDialog
     * @param parent
     * @param modal
     */
    public ProfesseurMatiereClasseDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        professeurMatiereClasseController = new ProfesseurMatiereClasseController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        professeurController = new ProfesseurController();
        anneeScolaireController = new AnneeScolaireController();
        matiereController = new MatiereController();
        initComponents();
        initCbAnneeScolaire();
        initCbCycle();
        initCbClasse();
        initCbMatiere();
        try {
            rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours().getAnnee());
        } catch (Exception e) {
        }
        rSButtonRiple_enregistrer.setText("Enrégistrer");
    }
    public ProfesseurMatiereClasseDialog(java.awt.Frame parent, boolean modal, String matricule) {
        super(parent, modal);
        this.matricule = matricule;
        professeurController = new ProfesseurController();
        professeurMatiereClasseController = new ProfesseurMatiereClasseController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        anneeScolaireController = new AnneeScolaireController();
        matiereController = new MatiereController();
        initComponents();
        initCbAnneeScolaire();
        initCbCycle();
        initCbClasse();
        initCbMatiere();
        try {
            rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours().getAnnee());
        } catch (Exception e) {
        }
        rSMTextFull_matricule.setText(this.matricule);
        rSButtonRiple_enregistrer.setText("Enrégistrer");
    }
    public ProfesseurMatiereClasseDialog(java.awt.Frame parent, boolean modal, ProfesseurMatiereClasse professeurMatiereClasse) {
        super(parent, modal);
        professeurController = new ProfesseurController();
        this.professeurMatiereClasse = professeurMatiereClasse;
        professeurMatiereClasseController = new ProfesseurMatiereClasseController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        anneeScolaireController = new AnneeScolaireController();
        matiereController = new MatiereController();
        initComponents();
        initCbAnneeScolaire();
        initCbCycle();
        initCbClasse();
        initCbMatiere();
        try {
            rSComboMetro_annee.setSelectedItem(this.professeurMatiereClasse.getMatiereClasse().getClasse().getAnnee());
            rSMTextFull_matricule.setText(this.professeurMatiereClasse.getProfesseur().getMatricule());
            rSComboMetro_cycle.setSelectedItem(this.professeurMatiereClasse.getMatiereClasse().getClasse().getCycle());
            rSComboMetro_classe.setSelectedItem(this.professeurMatiereClasse.getMatiereClasse().getClasse().getClasse());
            jSpinner_coefficient.setValue(this.professeurMatiereClasse.getMatiereClasse().getCoefficient());
            jSpinner_volume_horaire.setValue(this.professeurMatiereClasse.getMatiereClasse().getVolume_horaire());
        } catch (Exception e) {
        }
        rSButtonRiple_enregistrer.setText("Mettre à jour");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rSMTextFull_matricule = new rojeru_san.RSMTextFull();
        rSComboMetro_cycle = new rojerusan.RSComboMetro();
        rSComboMetro_classe = new rojerusan.RSComboMetro();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        rSButtonRiple_enregistrer = new rojeru_san.RSButtonRiple();
        jSpinner_volume_horaire = new javax.swing.JSpinner();
        jSpinner_coefficient = new javax.swing.JSpinner();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        jLabel6 = new javax.swing.JLabel();
        rSComboMetro_matiere = new rojerusan.RSComboMetro();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Attribution Matière Enseignant");
        setResizable(false);

        jLabel1.setText("N° matricule");

        rSMTextFull_matricule.setPlaceholder("");

        rSComboMetro_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_cycleActionPerformed(evt);
            }
        });

        jLabel2.setText("Cycle");

        jLabel3.setText("Classe");

        jLabel4.setText("Vol. horaire");

        jLabel5.setText("Coefficient");

        rSButtonRiple_enregistrer.setText("Valider");
        rSButtonRiple_enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple_enregistrerActionPerformed(evt);
            }
        });

        jSpinner_volume_horaire.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jSpinner_coefficient.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        rSComboMetro_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_anneeActionPerformed(evt);
            }
        });

        jLabel6.setText("Année");

        jLabel7.setText("Matière");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(rSButtonRiple_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMTextFull_matricule, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSpinner_volume_horaire, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                        .addComponent(jSpinner_coefficient)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(rSComboMetro_matiere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rSMTextFull_matricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_matiere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinner_volume_horaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jSpinner_coefficient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(rSButtonRiple_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rSComboMetro_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_cycleActionPerformed
        initCbClasse();
    }//GEN-LAST:event_rSComboMetro_cycleActionPerformed

    private void rSButtonRiple_enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple_enregistrerActionPerformed
        if(rSMTextFull_matricule.getText().length() == 0 || professeurController.getProfesseur(rSMTextFull_matricule.getText()) == null){
            JOptionPane.showMessageDialog(this, "Champ matricule vide ou auccun enseignant trouvé pour le numéro matricule saisie.", "Erreur de matricule !", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
            if(matricule != null){
                professeurMatiereClasseController.addProfesseurMatiereClasse(rSMTextFull_matricule.getText(), rSComboMetro_classe.getSelectedItem().toString(), rSComboMetro_annee.getSelectedItem().toString(), rSComboMetro_matiere.getSelectedItem().toString(), (int) jSpinner_volume_horaire.getValue(), (int) jSpinner_coefficient.getValue());
            }else if(professeurMatiereClasse == null){
                professeurMatiereClasseController.addProfesseurMatiereClasse(rSMTextFull_matricule.getText(), rSComboMetro_classe.getSelectedItem().toString(), rSComboMetro_annee.getSelectedItem().toString(), rSComboMetro_matiere.getSelectedItem().toString(), (int) jSpinner_volume_horaire.getValue(), (int) jSpinner_coefficient.getValue());
            }else{
                professeurMatiereClasseController.setProfesseurMatiereClasse(professeurMatiereClasse.getProfesseur().getMatricule(), professeurMatiereClasse.getMatiereClasse().getClasse().getClasse(), professeurMatiereClasse.getMatiereClasse().getClasse().getAnnee(),  professeurMatiereClasse.getMatiereClasse().getMatiere().getMatiere(), rSMTextFull_matricule.getText(), rSComboMetro_classe.getSelectedItem().toString(), rSComboMetro_annee.getSelectedItem().toString(), rSComboMetro_matiere.getSelectedItem().toString(), (int) jSpinner_volume_horaire.getValue(), (int) jSpinner_coefficient.getValue());
            }
            this.dispose();
        }
    }//GEN-LAST:event_rSButtonRiple_enregistrerActionPerformed

    private void rSComboMetro_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_anneeActionPerformed
        initCbClasse();
    }//GEN-LAST:event_rSComboMetro_anneeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProfesseurMatiereClasseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProfesseurMatiereClasseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProfesseurMatiereClasseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfesseurMatiereClasseDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProfesseurMatiereClasseDialog dialog = new ProfesseurMatiereClasseDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    private final ProfesseurController professeurController;
    private ProfesseurMatiereClasse professeurMatiereClasse;
    private final CycleController cycleController;
    private final ClasseController classeController;
    private final ProfesseurMatiereClasseController professeurMatiereClasseController;
    private final AnneeScolaireController anneeScolaireController;
    private String matricule;
    private final MatiereController matiereController;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner jSpinner_coefficient;
    private javax.swing.JSpinner jSpinner_volume_horaire;
    private rojeru_san.RSButtonRiple rSButtonRiple_enregistrer;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    private rojerusan.RSComboMetro rSComboMetro_classe;
    private rojerusan.RSComboMetro rSComboMetro_cycle;
    private rojerusan.RSComboMetro rSComboMetro_matiere;
    private rojeru_san.RSMTextFull rSMTextFull_matricule;
    // End of variables declaration//GEN-END:variables
    private void initCbAnneeScolaire() {
        rSComboMetro_annee.removeAllItems();
        anneeScolaireController.getListAnneeScolaire().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
    }
    
    private void initCbCycle(){
        rSComboMetro_cycle.removeAllItems();
        cycleController.getListCycle().forEach((c) -> {
            rSComboMetro_cycle.addItem(c);
        });
    }
    private void initCbClasse() {
        rSComboMetro_classe.removeAllItems();
        String annee = null, cycle = null;
        if(rSComboMetro_annee.getSelectedIndex() < 0){
            return;
        }
        if(rSComboMetro_cycle.getSelectedIndex() > -1){
            cycle = rSComboMetro_cycle.getSelectedItem().toString();
        }
        
        classeController.getListClasse(rSComboMetro_annee.getSelectedItem().toString(), cycle).forEach((c) -> {
            rSComboMetro_classe.addItem(c.getClasse());        
        });
    }
    private void initCbMatiere(){
        rSComboMetro_matiere.removeAllItems();
        matiereController.getListMatiere().forEach((c) -> {
            rSComboMetro_matiere.addItem(c.getMatiere());
        });
    }
}
