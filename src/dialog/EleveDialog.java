/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dialog;

import bean.Classe;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import controller.AnneeScolaireController;
import controller.ClasseController;
import controller.CycleController;
import controller.EleveController;
import controller.NationaliteController;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author ATH
 */
public class EleveDialog extends javax.swing.JDialog {

    /**
     * Creates new form Eleve
     * @param parent
     * @param modal
     */
    public EleveDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        eleveController = new EleveController();
        nationaliteController = new NationaliteController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        anneeScolaireController = new AnneeScolaireController();
        initComponents();
        initCbAnneeScolaire();
        initCbCycle();
        initCbClasse();
        initCbNationalite();
        try {
            rSComboMetro_annee.setSelectedItem(anneeScolaireController.getAnneeScolaireEnCours().getAnnee());
        } catch (Exception e) {
        }
    }
    
    public EleveDialog(java.awt.Frame parent, boolean modal, String matricule) {
        super(parent, modal);
        eleveController = new EleveController();
        nationaliteController = new NationaliteController();
        cycleController = new CycleController();
        classeController = new ClasseController();
        anneeScolaireController = new AnneeScolaireController();
        eleve = eleveController.getEleve(matricule);
        this.photo = eleve.getPhoto();
        this.qr_code = eleve.getQr_code();
        initComponents();
        initCbAnneeScolaire();
        initCbCycle();
        initCbClasse();
        initCbNationalite();
        try {
            rSComboMetro_annee.setSelectedItem(eleve.getClasse().getAnnee());
            rSComboMetro_cycle.setSelectedItem(eleve.getClasse().getCycle());
            rSComboMetro_classe.setSelectedItem(eleve.getClasse().getClasse());
            rSbComboMetro_nationalite.setSelectedItem(eleve.getNationalite());
            rSComboMetro_sexe.setSelectedItem(eleve.getSexe());
            jLabel_photo.setIcon(new ImageIcon(eleve.getPhoto()));
        } catch (Exception e) {
        }
        
        rSMTextFull_contact.setText(eleve.getContact());
        rSMTextFull_nom_prenom.setText(eleve.getNom_prenom());
        rSMTextFull_matricule.setText(eleve.getMatricule());
        jDateChooser_date_de_naissance.setDate(eleve.getDate_de_naissance());
        rSMTextFull_lieu_de_naissance.setText(eleve.getLieu_de_naissance());
        btn_valider.setText("Mettre à jour");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSMTextFull_nom_prenom = new rojeru_san.RSMTextFull();
        rSMTextFull_contact = new rojeru_san.RSMTextFull();
        rSbComboMetro_nationalite = new rojerusan.RSComboMetro();
        btn_valider = new rojeru_san.RSButton();
        rSMTextFull_matricule = new rojeru_san.RSMTextFull();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser_date_de_naissance = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        rSMTextFull_lieu_de_naissance = new rojeru_san.RSMTextFull();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rSComboMetro_sexe = new rojerusan.RSComboMetro();
        rSComboMetro_cycle = new rojerusan.RSComboMetro();
        jLabel8 = new javax.swing.JLabel();
        rSComboMetro_classe = new rojerusan.RSComboMetro();
        jLabel9 = new javax.swing.JLabel();
        rSComboMetro_annee = new rojerusan.RSComboMetro();
        jLabel10 = new javax.swing.JLabel();
        rSButtonRiple_photo = new rojeru_san.RSButtonRiple();
        jLabel_photo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion des étudiants");
        setResizable(false);

        rSMTextFull_nom_prenom.setPlaceholder("Nom et Prénom");

        rSMTextFull_contact.setToolTipText("");
        rSMTextFull_contact.setPlaceholder("Tel.");

        btn_valider.setText("Enrégistrer");
        btn_valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_validerActionPerformed(evt);
            }
        });

        rSMTextFull_matricule.setEditable(false);
        rSMTextFull_matricule.setPlaceholder("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Matricule");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nom et Prénom");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Date de Naissance");

        rSMTextFull_lieu_de_naissance.setPlaceholder("");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Lieu de Naissance");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Nationalité");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Contact");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Sexe");

        rSComboMetro_sexe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));

        rSComboMetro_cycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_cycleActionPerformed(evt);
            }
        });

        jLabel8.setText("Cycle");

        rSComboMetro_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_classeActionPerformed(evt);
            }
        });

        jLabel9.setText("Classe");

        rSComboMetro_annee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSComboMetro_anneeActionPerformed(evt);
            }
        });

        jLabel10.setText("Année scolaire");

        rSButtonRiple_photo.setText("CHOISIR PHOTO");
        rSButtonRiple_photo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rSButtonRiple_photoActionPerformed(evt);
            }
        });

        jLabel_photo.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_photo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_photo.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMTextFull_contact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rSbComboMetro_nationalite, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateChooser_date_de_naissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rSComboMetro_sexe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rSMTextFull_lieu_de_naissance, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_valider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rSMTextFull_nom_prenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSMTextFull_matricule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(rSButtonRiple_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(jLabel_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rSComboMetro_annee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addComponent(rSButtonRiple_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rSComboMetro_cycle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel_photo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSComboMetro_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSMTextFull_matricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSMTextFull_nom_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rSMTextFull_lieu_de_naissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(jDateChooser_date_de_naissance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rSbComboMetro_nationalite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(rSComboMetro_sexe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rSMTextFull_contact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(btn_valider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_validerActionPerformed
        if(rSMTextFull_nom_prenom.getText().length() == 0 || rSMTextFull_contact.getText().length() == 0 || rSbComboMetro_nationalite.getSelectedIndex() <0 || rSMTextFull_matricule.getText().length() == 0){
            JOptionPane.showMessageDialog(this, "Champ vide.", "Erreur de syntaxe !", JOptionPane.WARNING_MESSAGE);
        }else{
            controlle_qr_code();
            if(eleve == null){
                java.sql.Date date = new Date(jDateChooser_date_de_naissance.getDate().getTime());
                eleveController.addEleve(rSMTextFull_matricule.getText(), rSComboMetro_annee.getSelectedItem().toString(), rSMTextFull_nom_prenom.getText(), date, rSMTextFull_lieu_de_naissance.getText(), rSbComboMetro_nationalite.getSelectedItem().toString(), rSMTextFull_contact.getText(), rSComboMetro_sexe.getSelectedItem().toString(), rSComboMetro_classe.getSelectedItem().toString(), qr_code, photo);
            }else{
                java.sql.Date date = new Date(jDateChooser_date_de_naissance.getDate().getTime());
                eleveController.setEleve(eleve, new bean.Eleve(rSMTextFull_matricule.getText(), rSComboMetro_annee.getSelectedItem().toString(), rSMTextFull_nom_prenom.getText(), date, rSMTextFull_lieu_de_naissance.getText(), rSbComboMetro_nationalite.getSelectedItem().toString(), rSMTextFull_contact.getText(), rSComboMetro_sexe.getSelectedItem().toString(), new Classe(rSComboMetro_classe.getSelectedItem().toString(), rSComboMetro_annee.getSelectedItem().toString(), rSComboMetro_cycle.getSelectedItem().toString()), qr_code, photo));
            }
            this.dispose();
        }
    }//GEN-LAST:event_btn_validerActionPerformed

    private void rSComboMetro_cycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_cycleActionPerformed
        initCbClasse();
        if(eleve == null){
            initMatricule();
        }
    }//GEN-LAST:event_rSComboMetro_cycleActionPerformed

    private void rSComboMetro_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_classeActionPerformed
        if(eleve == null){
            initMatricule();
        }
    }//GEN-LAST:event_rSComboMetro_classeActionPerformed

    private void rSComboMetro_anneeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSComboMetro_anneeActionPerformed
        // TODO add your handling code here:
        if(eleve == null){
            initMatricule();
        }
    }//GEN-LAST:event_rSComboMetro_anneeActionPerformed

    private void rSButtonRiple_photoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rSButtonRiple_photoActionPerformed
        saving_image();
    }//GEN-LAST:event_rSButtonRiple_photoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EleveDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            EleveDialog dialog = new EleveDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    private bean.Eleve eleve;
    private final EleveController eleveController;
    private final NationaliteController nationaliteController;
    private final AnneeScolaireController anneeScolaireController;
    private final CycleController cycleController;
    private final ClasseController classeController;
    private static String PHOTO_DIR = "C:/Geschool/ressources/photo/";
    private static String QR_DIR = "C:/Geschool/ressources/qr/";
    private String qr_code, photo;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButton btn_valider;
    private com.toedter.calendar.JDateChooser jDateChooser_date_de_naissance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_photo;
    private rojeru_san.RSButtonRiple rSButtonRiple_photo;
    private rojerusan.RSComboMetro rSComboMetro_annee;
    private rojerusan.RSComboMetro rSComboMetro_classe;
    private rojerusan.RSComboMetro rSComboMetro_cycle;
    private rojerusan.RSComboMetro rSComboMetro_sexe;
    private rojeru_san.RSMTextFull rSMTextFull_contact;
    private rojeru_san.RSMTextFull rSMTextFull_lieu_de_naissance;
    private rojeru_san.RSMTextFull rSMTextFull_matricule;
    private rojeru_san.RSMTextFull rSMTextFull_nom_prenom;
    private rojerusan.RSComboMetro rSbComboMetro_nationalite;
    // End of variables declaration//GEN-END:variables

    private void initCbNationalite() {
        rSbComboMetro_nationalite.removeAllItems();
        nationaliteController.getListNationalite().forEach((n) -> {
            rSbComboMetro_nationalite.addItem(n.getNationalite());
        });
    }
    private void initCbCycle(){
        rSComboMetro_cycle.removeAllItems();
        cycleController.getListCycle().forEach((c) -> {
            rSComboMetro_cycle.addItem(c);
        });
    }
    private void initCbClasse() {
        rSComboMetro_classe.removeAllItems();
        String annee = null, cycle = null;
        if(rSComboMetro_annee.getSelectedIndex() < 0){
            return;
        }
        if(rSComboMetro_cycle.getSelectedIndex() > -1){
            cycle = rSComboMetro_cycle.getSelectedItem().toString();
        }
        
        classeController.getListClasse(rSComboMetro_annee.getSelectedItem().toString(), cycle).forEach((c) -> {
            rSComboMetro_classe.addItem(c.getClasse());        
        });
    }
    private void initMatricule(){
        if(rSComboMetro_cycle.getSelectedIndex() < 0 || rSComboMetro_classe.getSelectedIndex() < 0 || rSComboMetro_annee.getSelectedIndex() < 0){
            rSMTextFull_matricule.setText("");
            return;
        }
        int rang = eleveController.getEleveCount(rSComboMetro_annee.getSelectedItem().toString()) + 1;
        String matricule = String.format("%03d", rang) + "/" + rSComboMetro_annee.getSelectedItem().toString().split("-")[0];
        rSMTextFull_matricule.setText(matricule);
    }

    private void initCbAnneeScolaire() {
        rSComboMetro_annee.removeAllItems();
        anneeScolaireController.getListAnneeScolaire().forEach((a) -> {
            rSComboMetro_annee.addItem(a.getAnnee());
        });
    }
    private void saving_image() {
        JFileChooser fileChooser = new JFileChooser();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        fileChooser.setDialogTitle("Choisir la photo");
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("Image files", new String[] { "png", "jpg", "jpeg" }));
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
        try {
          Image image = ImageIO.read(fileChooser.getSelectedFile());
          File source = new File(fileChooser.getSelectedFile().getAbsolutePath());
          if (image != null) {
            String extension = FilenameUtils.getExtension(fileChooser.getSelectedFile().getName());
            File des = new File(PHOTO_DIR + rSMTextFull_matricule.getText().replaceAll("/", "-") + "." + extension);
            FileUtils.copyFile(source, des);
            photo = PHOTO_DIR + rSMTextFull_matricule.getText().replaceAll("/", "-") + "." + extension;
            String url_photo = photo;
            if(url_photo != null){
                jLabel_photo.setIcon(new ImageIcon(url_photo));
            }
          }
        } catch (IOException ex) {
        }
      }
    }
    
    private static BitMatrix generateMatrix(String donne, int size){
        BitMatrix bitMatrix = null;
        try {
            bitMatrix = new QRCodeWriter().encode(donne, BarcodeFormat.QR_CODE, size, size);
            return bitMatrix;
        } catch (WriterException ex) {
            Logger.getLogger(EleveDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        return bitMatrix;
    }
    private static void writeImage(String outputFileName, String imageFormat, BitMatrix bitMatrix){
        FileOutputStream fileOutputStream = null;
        try {
            fileOutputStream = new FileOutputStream(new File(outputFileName));
            MatrixToImageWriter.writeToStream(bitMatrix, imageFormat, fileOutputStream);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EleveDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(EleveDialog.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fileOutputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(EleveDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void controlle_qr_code() {
        String donne = rSMTextFull_matricule.getText() + " " + rSMTextFull_nom_prenom.getText();
        int size = 400;
        String imageFormat = "png";
        String outPutFileName = QR_DIR + rSMTextFull_matricule.getText().replaceAll("/", "-") + "." + imageFormat;
        BitMatrix bitMatrix = generateMatrix(donne, size);
        writeImage(outPutFileName, imageFormat, bitMatrix);
        qr_code = outPutFileName;
    }
}
